/*
 * generated by Xtext
 */
package com.opcoach.datasample.xtext.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import com.opcoach.datasample.xtext.services.DataSampleDSLGrammarAccess;

public class DataSampleDSLParser extends AbstractContentAssistParser {
	
	@Inject
	private DataSampleDSLGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected com.opcoach.datasample.xtext.ui.contentassist.antlr.internal.InternalDataSampleDSLParser createParser() {
		com.opcoach.datasample.xtext.ui.contentassist.antlr.internal.InternalDataSampleDSLParser result = new com.opcoach.datasample.xtext.ui.contentassist.antlr.internal.InternalDataSampleDSLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getLanguageAccess().getAlternatives(), "rule__Language__Alternatives");
					put(grammarAccess.getDataSampleAccess().getGroup(), "rule__DataSample__Group__0");
					put(grammarAccess.getDataSampleAccess().getGroup_10(), "rule__DataSample__Group_10__0");
					put(grammarAccess.getDataSampleAccess().getGroup_10_3(), "rule__DataSample__Group_10_3__0");
					put(grammarAccess.getDataSampleAccess().getGroup_13(), "rule__DataSample__Group_13__0");
					put(grammarAccess.getDataSampleAccess().getGroup_15(), "rule__DataSample__Group_15__0");
					put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
					put(grammarAccess.getEntityGenerator2Access().getGroup(), "rule__EntityGenerator2__Group__0");
					put(grammarAccess.getEntityGeneratorAccess().getGroup(), "rule__EntityGenerator__Group__0");
					put(grammarAccess.getEntityGeneratorAccess().getGroup_3(), "rule__EntityGenerator__Group_3__0");
					put(grammarAccess.getEntityGeneratorAccess().getGroup_4(), "rule__EntityGenerator__Group_4__0");
					put(grammarAccess.getEntityGeneratorAccess().getGroup_5(), "rule__EntityGenerator__Group_5__0");
					put(grammarAccess.getFieldGenerator2Access().getGroup(), "rule__FieldGenerator2__Group__0");
					put(grammarAccess.getFieldGenerator2Access().getGroup_6(), "rule__FieldGenerator2__Group_6__0");
					put(grammarAccess.getFieldGeneratorAccess().getGroup(), "rule__FieldGenerator__Group__0");
					put(grammarAccess.getFieldGeneratorAccess().getGroup_2(), "rule__FieldGenerator__Group_2__0");
					put(grammarAccess.getFieldGeneratorAccess().getGroup_3(), "rule__FieldGenerator__Group_3__0");
					put(grammarAccess.getFieldGeneratorAccess().getGroup_4(), "rule__FieldGenerator__Group_4__0");
					put(grammarAccess.getFieldGeneratorAccess().getGroup_5(), "rule__FieldGenerator__Group_5__0");
					put(grammarAccess.getFieldGeneratorAccess().getGroup_8(), "rule__FieldGenerator__Group_8__0");
					put(grammarAccess.getDataSampleAccess().getNameAssignment_2(), "rule__DataSample__NameAssignment_2");
					put(grammarAccess.getDataSampleAccess().getPackageURIAssignment_4(), "rule__DataSample__PackageURIAssignment_4");
					put(grammarAccess.getDataSampleAccess().getSeedAssignment_7(), "rule__DataSample__SeedAssignment_7");
					put(grammarAccess.getDataSampleAccess().getLanguageAssignment_9(), "rule__DataSample__LanguageAssignment_9");
					put(grammarAccess.getDataSampleAccess().getBadValueGeneratorNamesAssignment_10_2(), "rule__DataSample__BadValueGeneratorNamesAssignment_10_2");
					put(grammarAccess.getDataSampleAccess().getBadValueGeneratorNamesAssignment_10_3_1(), "rule__DataSample__BadValueGeneratorNamesAssignment_10_3_1");
					put(grammarAccess.getDataSampleAccess().getEntityGeneratorsAssignment_12(), "rule__DataSample__EntityGeneratorsAssignment_12");
					put(grammarAccess.getDataSampleAccess().getEntityGeneratorsAssignment_13_1(), "rule__DataSample__EntityGeneratorsAssignment_13_1");
					put(grammarAccess.getDataSampleAccess().getFieldGeneratorsAssignment_14(), "rule__DataSample__FieldGeneratorsAssignment_14");
					put(grammarAccess.getDataSampleAccess().getFieldGeneratorsAssignment_15_1(), "rule__DataSample__FieldGeneratorsAssignment_15_1");
					put(grammarAccess.getEntityGenerator2Access().getNumberAssignment_1(), "rule__EntityGenerator2__NumberAssignment_1");
					put(grammarAccess.getEntityGenerator2Access().getEntityNameAssignment_2(), "rule__EntityGenerator2__EntityNameAssignment_2");
					put(grammarAccess.getEntityGeneratorAccess().getNumberAssignment_3_1(), "rule__EntityGenerator__NumberAssignment_3_1");
					put(grammarAccess.getEntityGeneratorAccess().getEntityNameAssignment_4_1(), "rule__EntityGenerator__EntityNameAssignment_4_1");
					put(grammarAccess.getEntityGeneratorAccess().getEntityAssignment_5_1(), "rule__EntityGenerator__EntityAssignment_5_1");
					put(grammarAccess.getFieldGenerator2Access().getEntityNameAssignment_1(), "rule__FieldGenerator2__EntityNameAssignment_1");
					put(grammarAccess.getFieldGenerator2Access().getFieldNameAssignment_3(), "rule__FieldGenerator2__FieldNameAssignment_3");
					put(grammarAccess.getFieldGenerator2Access().getGeneratorNameAssignment_5(), "rule__FieldGenerator2__GeneratorNameAssignment_5");
					put(grammarAccess.getFieldGenerator2Access().getErrorRateAssignment_6_1(), "rule__FieldGenerator2__ErrorRateAssignment_6_1");
					put(grammarAccess.getFieldGenerator2Access().getErrorGeneratorNameAssignment_6_3(), "rule__FieldGenerator2__ErrorGeneratorNameAssignment_6_3");
					put(grammarAccess.getFieldGeneratorAccess().getEntityNameAssignment_2_1(), "rule__FieldGenerator__EntityNameAssignment_2_1");
					put(grammarAccess.getFieldGeneratorAccess().getFieldNameAssignment_3_1(), "rule__FieldGenerator__FieldNameAssignment_3_1");
					put(grammarAccess.getFieldGeneratorAccess().getErrorRateAssignment_4_1(), "rule__FieldGenerator__ErrorRateAssignment_4_1");
					put(grammarAccess.getFieldGeneratorAccess().getGeneratorNameAssignment_5_1(), "rule__FieldGenerator__GeneratorNameAssignment_5_1");
					put(grammarAccess.getFieldGeneratorAccess().getGeneratorAssignment_7(), "rule__FieldGenerator__GeneratorAssignment_7");
					put(grammarAccess.getFieldGeneratorAccess().getStructuralFeatureAssignment_8_1(), "rule__FieldGenerator__StructuralFeatureAssignment_8_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			com.opcoach.datasample.xtext.ui.contentassist.antlr.internal.InternalDataSampleDSLParser typedParser = (com.opcoach.datasample.xtext.ui.contentassist.antlr.internal.InternalDataSampleDSLParser) parser;
			typedParser.entryRuleDataSample();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public DataSampleDSLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(DataSampleDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
