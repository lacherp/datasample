/*
 * generated by Xtext
 */
grammar InternalDataSampleDSL;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package com.opcoach.datasample.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.opcoach.datasample.xtext.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.opcoach.datasample.xtext.services.DataSampleDSLGrammarAccess;

}

@parser::members {

 	private DataSampleDSLGrammarAccess grammarAccess;
 	
    public InternalDataSampleDSLParser(TokenStream input, DataSampleDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "DataSample";	
   	}
   	
   	@Override
   	protected DataSampleDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleDataSample
entryRuleDataSample returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataSampleRule()); }
	 iv_ruleDataSample=ruleDataSample 
	 { $current=$iv_ruleDataSample.current; } 
	 EOF 
;

// Rule DataSample
ruleDataSample returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDataSampleAccess().getDataSampleAction_0(),
            $current);
    }
)	otherlv_1='Sample' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDataSampleAccess().getSampleKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataSampleAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataSampleRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"com.opcoach.datasample.xtext.DataSampleDSL.EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='for ' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDataSampleAccess().getForKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataSampleAccess().getPackageURIEStringParserRuleCall_4_0()); 
	    }
		lv_packageURI_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataSampleRule());
	        }
       		set(
       			$current, 
       			"packageURI",
        		lv_packageURI_4_0, 
        		"com.opcoach.datasample.xtext.DataSampleDSL.EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDataSampleAccess().getLeftCurlyBracketKeyword_5());
    }
	otherlv_6='seed' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDataSampleAccess().getSeedKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataSampleAccess().getSeedEIntParserRuleCall_7_0()); 
	    }
		lv_seed_7_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataSampleRule());
	        }
       		set(
       			$current, 
       			"seed",
        		lv_seed_7_0, 
        		"com.opcoach.datasample.xtext.DataSampleDSL.EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='language' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDataSampleAccess().getLanguageKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataSampleAccess().getLanguageLanguageEnumRuleCall_9_0()); 
	    }
		lv_language_9_0=ruleLanguage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataSampleRule());
	        }
       		set(
       			$current, 
       			"language",
        		lv_language_9_0, 
        		"com.opcoach.datasample.xtext.DataSampleDSL.Language");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10='badValueGeneratorNames' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDataSampleAccess().getBadValueGeneratorNamesKeyword_10_0());
    }
	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDataSampleAccess().getLeftCurlyBracketKeyword_10_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataSampleAccess().getBadValueGeneratorNamesEStringParserRuleCall_10_2_0()); 
	    }
		lv_badValueGeneratorNames_12_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataSampleRule());
	        }
       		add(
       			$current, 
       			"badValueGeneratorNames",
        		lv_badValueGeneratorNames_12_0, 
        		"com.opcoach.datasample.xtext.DataSampleDSL.EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getDataSampleAccess().getCommaKeyword_10_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataSampleAccess().getBadValueGeneratorNamesEStringParserRuleCall_10_3_1_0()); 
	    }
		lv_badValueGeneratorNames_14_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataSampleRule());
	        }
       		add(
       			$current, 
       			"badValueGeneratorNames",
        		lv_badValueGeneratorNames_14_0, 
        		"com.opcoach.datasample.xtext.DataSampleDSL.EString");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getDataSampleAccess().getRightCurlyBracketKeyword_10_4());
    }
)?	otherlv_16='In the root object generate ' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getDataSampleAccess().getInTheRootObjectGenerateKeyword_11());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataSampleAccess().getEntityGeneratorsEntityGenerator2ParserRuleCall_12_0()); 
	    }
		lv_entityGenerators_17_0=ruleEntityGenerator2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataSampleRule());
	        }
       		add(
       			$current, 
       			"entityGenerators",
        		lv_entityGenerators_17_0, 
        		"com.opcoach.datasample.xtext.DataSampleDSL.EntityGenerator2");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_18=',' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getDataSampleAccess().getCommaKeyword_13_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataSampleAccess().getEntityGeneratorsEntityGenerator2ParserRuleCall_13_1_0()); 
	    }
		lv_entityGenerators_19_0=ruleEntityGenerator2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataSampleRule());
	        }
       		add(
       			$current, 
       			"entityGenerators",
        		lv_entityGenerators_19_0, 
        		"com.opcoach.datasample.xtext.DataSampleDSL.EntityGenerator2");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
(
		{ 
	        newCompositeNode(grammarAccess.getDataSampleAccess().getFieldGeneratorsFieldGenerator2ParserRuleCall_14_0()); 
	    }
		lv_fieldGenerators_20_0=ruleFieldGenerator2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataSampleRule());
	        }
       		add(
       			$current, 
       			"fieldGenerators",
        		lv_fieldGenerators_20_0, 
        		"com.opcoach.datasample.xtext.DataSampleDSL.FieldGenerator2");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_21=',' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getDataSampleAccess().getCommaKeyword_15_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataSampleAccess().getFieldGeneratorsFieldGenerator2ParserRuleCall_15_1_0()); 
	    }
		lv_fieldGenerators_22_0=ruleFieldGenerator2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataSampleRule());
	        }
       		add(
       			$current, 
       			"fieldGenerators",
        		lv_fieldGenerators_22_0, 
        		"com.opcoach.datasample.xtext.DataSampleDSL.FieldGenerator2");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_23='}' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getDataSampleAccess().getRightCurlyBracketKeyword_16());
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEIntRule()); } 
	 iv_ruleEInt=ruleEInt 
	 { $current=$iv_ruleEInt.current.getText(); }  
	 EOF 
;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleEntityGenerator2
entryRuleEntityGenerator2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntityGenerator2Rule()); }
	 iv_ruleEntityGenerator2=ruleEntityGenerator2 
	 { $current=$iv_ruleEntityGenerator2.current; } 
	 EOF 
;

// Rule EntityGenerator2
ruleEntityGenerator2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getEntityGenerator2Access().getEntityGeneratorAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityGenerator2Access().getNumberEIntParserRuleCall_1_0()); 
	    }
		lv_number_1_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityGenerator2Rule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_1_0, 
        		"com.opcoach.datasample.xtext.DataSampleDSL.EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityGenerator2Access().getEntityNameEStringParserRuleCall_2_0()); 
	    }
		lv_entityName_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityGenerator2Rule());
	        }
       		set(
       			$current, 
       			"entityName",
        		lv_entityName_2_0, 
        		"com.opcoach.datasample.xtext.DataSampleDSL.EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;







// Entry rule entryRuleFieldGenerator2
entryRuleFieldGenerator2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFieldGenerator2Rule()); }
	 iv_ruleFieldGenerator2=ruleFieldGenerator2 
	 { $current=$iv_ruleFieldGenerator2.current; } 
	 EOF 
;

// Rule FieldGenerator2
ruleFieldGenerator2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='forField' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFieldGenerator2Access().getForFieldKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldGenerator2Access().getEntityNameEStringParserRuleCall_1_0()); 
	    }
		lv_entityName_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldGenerator2Rule());
	        }
       		set(
       			$current, 
       			"entityName",
        		lv_entityName_1_0, 
        		"com.opcoach.datasample.xtext.DataSampleDSL.EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFieldGenerator2Access().getFullStopKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldGenerator2Access().getFieldNameEStringParserRuleCall_3_0()); 
	    }
		lv_fieldName_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldGenerator2Rule());
	        }
       		set(
       			$current, 
       			"fieldName",
        		lv_fieldName_3_0, 
        		"com.opcoach.datasample.xtext.DataSampleDSL.EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='use' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFieldGenerator2Access().getUseKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldGenerator2Access().getGeneratorNameEStringParserRuleCall_5_0()); 
	    }
		lv_generatorName_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldGenerator2Rule());
	        }
       		set(
       			$current, 
       			"generatorName",
        		lv_generatorName_5_0, 
        		"com.opcoach.datasample.xtext.DataSampleDSL.EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6='with errorRate=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFieldGenerator2Access().getWithErrorRateKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldGenerator2Access().getErrorRateEIntParserRuleCall_6_1_0()); 
	    }
		lv_errorRate_7_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldGenerator2Rule());
	        }
       		set(
       			$current, 
       			"errorRate",
        		lv_errorRate_7_0, 
        		"com.opcoach.datasample.xtext.DataSampleDSL.EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='% generated with ' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getFieldGenerator2Access().getGeneratedWithKeyword_6_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldGenerator2Access().getErrorGeneratorNameEStringParserRuleCall_6_3_0()); 
	    }
		lv_errorGeneratorName_9_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldGenerator2Rule());
	        }
       		set(
       			$current, 
       			"errorGeneratorName",
        		lv_errorGeneratorName_9_0, 
        		"com.opcoach.datasample.xtext.DataSampleDSL.EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;







// Rule Language
ruleLanguage returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='fr' 
	{
        $current = grammarAccess.getLanguageAccess().getFrEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getLanguageAccess().getFrEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='en' 
	{
        $current = grammarAccess.getLanguageAccess().getEnEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getLanguageAccess().getEnEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='de' 
	{
        $current = grammarAccess.getLanguageAccess().getDeEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getLanguageAccess().getDeEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='es' 
	{
        $current = grammarAccess.getLanguageAccess().getEsEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getLanguageAccess().getEsEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='it' 
	{
        $current = grammarAccess.getLanguageAccess().getItEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getLanguageAccess().getItEnumLiteralDeclaration_4()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


