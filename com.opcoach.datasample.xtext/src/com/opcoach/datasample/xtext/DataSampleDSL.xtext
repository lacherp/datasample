// automatically generated by Xtext
grammar com.opcoach.datasample.xtext.DataSampleDSL with org.eclipse.xtext.common.Terminals

import "http://www.opcoach.com/datasample/1.0"  
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.opcoach.generator/1.0" as generator

DataSample returns DataSample:
	{DataSample}
	'Sample'
	name=EString 'for ' packageURI=EString 
	'{'
		'seed' seed=EInt
		'language' language=Language
		('badValueGeneratorNames' '{' badValueGeneratorNames+=EString ( "," badValueGeneratorNames+=EString)* '}' )?
	//	('package' package=[ecore::EPackage|EString])?
	//	('rootEntity' rootEntity=[ecore::EClass|EString])?
		'In the root object generate '  entityGenerators+=EntityGenerator2 ( "," entityGenerators+=EntityGenerator2)* 
		 fieldGenerators+=FieldGenerator2 ( "," fieldGenerators+=FieldGenerator2)* 
	'}';



EString returns ecore::EString:
	STRING | ID;

EInt returns ecore::EInt:
	'-'? INT;

enum Language returns Language:
				fr = 'fr' | en = 'en' | de = 'de' | es = 'es' | it = 'it';


EntityGenerator2 returns EntityGenerator:
	{EntityGenerator}
	number=EInt entityName=EString
	;



EntityGenerator returns EntityGenerator:
	{EntityGenerator}
	'EntityGenerator'
	'{'
		('number' number=EInt)?
		('entityName' entityName=EString)?
		('entity' entity=[ecore::EClass|EString])?
	'}';

FieldGenerator2 returns FieldGenerator:
	'forField' entityName=EString '.' fieldName=EString 'use' generatorName=EString ('with errorRate=' errorRate=EInt '% generated with ' errorGeneratorName=EString )?
	;

FieldGenerator returns FieldGenerator:
	'FieldGenerator'
	'{'
		('entityName' entityName=EString)?
		('fieldName' fieldName=EString)?
		('errorRate' errorRate=EInt)?
		('generatorName' generatorName=EString)?
		'generator' generator=[generator::ValueGenerator|EString]
		('structuralFeature' structuralFeature=[ecore::EStructuralFeature|EString])?
	'}';

