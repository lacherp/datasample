// automatically generated by Xtext
grammar com.opcoach.datasample.xtext.DataSampleDSL with org.eclipse.xtext.common.Terminals

import "http://www.opcoach.com/datasample/1.0"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.opcoach.generator/1.0" as generator

DataSample returns DataSample:
	{DataSample}
	'Sample'
	name=EString 'for' packageURI=EString
	'generateRootObject' rootEntityName=EString
	('seed' seed=EInt)?
	('language' language=Language)?
	('fileExtension' fileExtension=EString)?
	'rootGenerator' rootGenerator=EntityGenerator
	//entityGenerators+=EntityGenerator* // ("," entityGenerators+=EntityGenerator)*
;

EString returns ecore::EString:
	STRING | ID;

EInt returns ecore::EInt:
	'-'? INT;

enum Language returns Language:
	fr='fr' | en='en' | de='de' | es='es' | it='it';

EntityGenerator returns EntityGenerator:
	{EntityGenerator}
	'generate' (number=EInt 'instancesOf') ? entityName=EString
	'{'
	fieldGenerators+=FieldGenerator*
	childGenerators+=Child* 
	associationGenerators+=AssociationGenerator*
	'}';

FieldGenerator returns FieldGenerator:
	{FieldGenerator}
	'forTheField' fieldName=EString 'use' generatorName=EString ('cardinality' number=EInt)? ('(' parameters+=Parameter
	(',' parameters+=Parameter)* ')')? ('withErrorRate=' errorRate=EInt 'generatedWith'
	errorGeneratorName=EString)?;

Child  returns ChildrenGenerator: ChildrenGenerator | PolymorphicChildrenGenerator;

ChildrenGenerator returns ChildrenGenerator:
	{ChildrenGenerator}
	'forTheComposition' fieldName=EString delegatedEntityGenerator=EntityGenerator;

PolymorphicChildrenGenerator returns PolymorphicChildrenGenerator:
	{PolymorphicChildrenGenerator}
	'forTheAbstractComposition' fieldName=EString 'use' '{' childrenGenerators+= EntityGenerator* '}' ;
  


AssociationGenerator:
	{AssociationGenerator}
	'forTheAssociation' fieldName=EString 'use' generatorName=EString ('cardinality' number=EInt)? ('('
	parameters+=Parameter (',' parameters+=Parameter)* ')')? ('withErrorRate=' errorRate=EInt 'generatedWith'
	errorGeneratorName=EString)?;

Parameter returns Parameter:
	name=ID '=' value=EString;


